doctype html
html
	head
		meta(charset='utf-8')
		link(rel="stylesheet", href="/css/index.css")
		//- script(src='http://localhost:48626/takana.js')
		//- script.
		//- 	if (typeof takanaClient !== 'undefined')
		//- 		takanaClient.run({host: 'localhost:48626'});
		
		title Benchmarks Dashboard

	

	body
		.BenchmarksDashboard-heading
			.BenchmarksDashboard-heading-title=options.title
			.BenchmarksDashboard-heading-subtitle=options.subtitle
		
		.BenchmarksDashboard-libraries
			each subject in libraries
				.BenchmarksDashboard-libraries-item
					.BenchmarksDashboard-libraries-item-innerwrap
						.BenchmarksDashboard-libraries-item-title
							span.BenchmarksDashboard-libraries-item-title-name=subject.title
							span.BenchmarksDashboard-libraries-item-title-version=' '+subject.version
						
						a.BenchmarksDashboard-libraries-item-button(href=subject.location)
							.BenchmarksDashboard-libraries-item-button-text Open Benchmarks Suite

		
		.BenchmarksDashboard-divider
			.BenchmarksDashboard-divider-line
			.BenchmarksDashboard-divider-text Results
		
		.BenchmarksDashboard-charts
			.BenchmarksDashboard-charts-gap
		
		.BenchmarksDashboard-settingsBar
			.BenchmarksDashboard-settingsBar-innerwrap
				.BenchmarksDashboard-settingsBar-title Settings
				.BenchmarksDashboard-settingsBar-list#settingsBar
					
					-
						var settings = [
							{
								name: 'valueType',
								label: 'Value Type',
								options: [
									{
										name: 'ops',
										label: 'Op/s'
									},
									{
										name: 'points',
										label: 'Points'
									}
								]
							},
							{
								name: 'chartType',
								label: 'Chart Type',
								options: [
									{
										name: 'bar',
										label: 'Bar'
									},
									{
										name: 'column',
										label: 'Column'
									}
								]
							},
							{
								name: 'browserData',
								label: 'Browser Data',
								options: [
									{
										name: 'current',
										label: 'Only Current'
									},
									{
										name: 'all',
										label: 'All Browsers'
									}
								]
							}
						]

					each setting in settings
						.BenchmarksDashboard-settingsBar-list-item(id=setting.name)
							.BenchmarksDashboard-settingsBar-list-item-label=setting.label
							
							.BenchmarksDashboard-settingsBar-list-item-options
								each option in setting.options
									.BenchmarksDashboard-settingsBar-list-item-options-item(class='{{state}}', data-name=option.name)=option.label




		script(src='/js/polyfills.js')
		script(src='/js/jquery.js')
		script(src='/js/humanize.js')
		script(src='/js/index.js')
		script window.ignoreList = !{JSON.stringify(ignoreList)};
		script.
			indexCharts({
				chartsOrderMap: !{JSON.stringify(chartsList)},
				itemsMap: !{JSON.stringify(colorsList)},				
			})


